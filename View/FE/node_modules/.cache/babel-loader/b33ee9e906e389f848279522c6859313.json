{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { create } from \"d3-selection\";\nimport { curveCatmullRom, line } from \"d3-shape\";\nimport { range } from \"d3-array\";\nexport function generatePathPoints(curvePoints, curved, pathPointsCount) {\n  var _svg = create(\"svg\");\n\n  var _path = _svg.append(\"path\");\n\n  var lineGenerator = line().x(function (d) {\n    return d.latitude;\n  }).y(function (d) {\n    return d.longitude;\n  });\n\n  if (curved) {\n    lineGenerator = lineGenerator.curve(curveCatmullRom.alpha(0.75));\n\n    if (curvePoints.length === 2) {\n      var _a = __read(curvePoints, 2),\n          _b = _a[0],\n          y1 = _b.latitude,\n          x1 = _b.longitude,\n          _c = _a[1],\n          y2 = _c.latitude,\n          x2 = _c.longitude; // add middle point\n\n\n      var a = (y2 - y1) / (x2 - x1);\n      var ax = Math.tan(Math.atan(a) + Math.PI / 2);\n      var c = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      var dx = c / (7 * (ax - a));\n      var dy = ax * dx;\n      var xl = x2 - x1;\n      var yl = y2 - y1;\n      curvePoints.splice(1, 0, {\n        latitude: y1 + yl / 3 + dy,\n        longitude: x1 + xl / 3 + dx\n      }, {\n        latitude: y1 + 2 * yl / 3 + dy,\n        longitude: x1 + 2 * xl / 3 + dx\n      });\n    }\n  }\n\n  _path.attr(\"d\", lineGenerator(curvePoints));\n\n  var svgLine = _path.node();\n\n  var lineLength = svgLine.getTotalLength();\n  var numPoints = pathPointsCount ? pathPointsCount : curved ? Math.ceil(lineLength * 2.5) < 15 ? 15 : Math.ceil(lineLength * 2.5) : 2;\n  var interval = lineLength / (numPoints - 1);\n\n  if (numPoints === 1) {\n    interval = 0;\n  } else {\n    interval = lineLength / (numPoints - 1);\n  }\n\n  return {\n    path: range(numPoints).map(function (d) {\n      var _a = svgLine.getPointAtLength(d * interval),\n          x = _a.x,\n          y = _a.y;\n\n      return new window.Microsoft.Maps.Location(x, y);\n    }),\n    length: lineLength\n  };\n}","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","create","curveCatmullRom","line","range","generatePathPoints","curvePoints","curved","pathPointsCount","_svg","_path","append","lineGenerator","x","d","latitude","y","longitude","curve","alpha","length","_a","_b","y1","x1","_c","y2","x2","a","ax","Math","tan","atan","PI","c","sqrt","dx","dy","xl","yl","splice","attr","svgLine","node","lineLength","getTotalLength","numPoints","ceil","interval","path","map","getPointAtLength","window","Microsoft","Maps","Location"],"sources":["C:/Users/hwiesel/Desktop/לימודים/realTimeFlights/View/FE/node_modules/@3acaga/react-bing-maps/dist/helpers/generatePathPoints.js"],"sourcesContent":["var __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nimport { create } from \"d3-selection\";\r\nimport { curveCatmullRom, line } from \"d3-shape\";\r\nimport { range } from \"d3-array\";\r\nexport function generatePathPoints(curvePoints, curved, pathPointsCount) {\r\n    var _svg = create(\"svg\");\r\n    var _path = _svg.append(\"path\");\r\n    var lineGenerator = line()\r\n        .x(function (d) { return d.latitude; })\r\n        .y(function (d) { return d.longitude; });\r\n    if (curved) {\r\n        lineGenerator = lineGenerator.curve(curveCatmullRom.alpha(0.75));\r\n        if (curvePoints.length === 2) {\r\n            var _a = __read(curvePoints, 2), _b = _a[0], y1 = _b.latitude, x1 = _b.longitude, _c = _a[1], y2 = _c.latitude, x2 = _c.longitude;\r\n            // add middle point\r\n            var a = (y2 - y1) / (x2 - x1);\r\n            var ax = Math.tan(Math.atan(a) + Math.PI / 2);\r\n            var c = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n            var dx = c / (7 * (ax - a));\r\n            var dy = ax * dx;\r\n            var xl = x2 - x1;\r\n            var yl = y2 - y1;\r\n            curvePoints.splice(1, 0, {\r\n                latitude: y1 + yl / 3 + dy,\r\n                longitude: x1 + xl / 3 + dx\r\n            }, {\r\n                latitude: y1 + (2 * yl) / 3 + dy,\r\n                longitude: x1 + (2 * xl) / 3 + dx\r\n            });\r\n        }\r\n    }\r\n    _path.attr(\"d\", lineGenerator(curvePoints));\r\n    var svgLine = _path.node();\r\n    var lineLength = svgLine.getTotalLength();\r\n    var numPoints = pathPointsCount\r\n        ? pathPointsCount\r\n        : curved\r\n            ? Math.ceil(lineLength * 2.5) < 15\r\n                ? 15\r\n                : Math.ceil(lineLength * 2.5)\r\n            : 2;\r\n    var interval = lineLength / (numPoints - 1);\r\n    if (numPoints === 1) {\r\n        interval = 0;\r\n    }\r\n    else {\r\n        interval = lineLength / (numPoints - 1);\r\n    }\r\n    return {\r\n        path: range(numPoints).map(function (d) {\r\n            var _a = svgLine.getPointAtLength(d * interval), x = _a.x, y = _a.y;\r\n            return new window.Microsoft.Maps.Location(x, y);\r\n        }),\r\n        length: lineLength\r\n    };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}