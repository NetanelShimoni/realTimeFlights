import React from "react";
import { LatLng } from "./index";
interface OwnProps {
    apiKey: string;
    center?: LatLng;
    onMapInit?: (map: Microsoft.Maps.Map) => void;
    onViewChangeStart?: (e: unknown, map: Microsoft.Maps.Map) => void;
    onViewChange?: (e: unknown, map: Microsoft.Maps.Map) => void;
    onViewChangeEnd?: (e: unknown, map: Microsoft.Maps.Map) => void;
    onClick?: (e: React.MouseEvent, map: Microsoft.Maps.Map) => void;
    onDoubleClick?: (e: React.MouseEvent, map: Microsoft.Maps.Map) => void;
    onRightClick?: (e: React.MouseEvent, map: Microsoft.Maps.Map) => void;
    onMouseDown?: (e: React.MouseEvent, map: Microsoft.Maps.Map) => void;
    onMouseOut?: (e: React.MouseEvent, map: Microsoft.Maps.Map) => void;
    onMouseOver?: (e: React.MouseEvent, map: Microsoft.Maps.Map) => void;
    onMouseUp?: (e: React.MouseEvent, map: Microsoft.Maps.Map) => void;
    onWheel?: (e: React.WheelEvent, map: Microsoft.Maps.Map) => void;
    onMapTypeChanged?: (e: unknown, map: Microsoft.Maps.Map) => void;
    onViewChangeStartThrottleMs?: number;
    onViewChangeThrottleMs?: number;
    onViewChangeEndThrottleMs?: number;
    onClickThrottleMs?: number;
    onDoubleClickThrottleMs?: number;
    onRightClickThrottleMs?: number;
    onMouseDownThrottleMs?: number;
    onMouseOutThrottleMs?: number;
    onMouseOverThrottleMs?: number;
    onMouseUpThrottleMs?: number;
    onWheelThrottleMs?: number;
    onMapTypeChangedThrottleMs?: number;
    children?: React.ReactNode;
}
interface CustomMap extends Microsoft.Maps.Map {
    awaitInit: Promise<unknown>;
}
declare const MapContext: React.Context<CustomMap>;
declare type ReactBingMapProps = Omit<Microsoft.Maps.IMapLoadOptions, keyof OwnProps> & OwnProps;
export { MapContext };
declare const _default: React.NamedExoticComponent<ReactBingMapProps>;
export default _default;
export { ReactBingMapProps };
